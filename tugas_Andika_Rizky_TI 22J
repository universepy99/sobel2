import numpy as np
import imageio.v3 as imageio
import matplotlib.pyplot as plt
from scipy.import convolve2


def roberts_operator(image):
    roberts_x = np.array([[1, 0], [0, -1]])
    roberts_y = np.array([[0, 1], [-1, 0]])

    grad_x = convolve2d(image, roberts_x, mode='same', boundary='symm')
    grad_y = convolve2d(image, roberts_y, mode='same', boundary='symm')

    return np.sqrt(grad_x**2 + grad_y**2)


def sobel_operator(image):
    sobel_x = np.array([[-1, 0, 1], [-2, 0, 2], [-1, 0, 1]])
    sobel_y = np.array([[1, 2, 1], [0, 0, 0], [-1, -2, -1]])

    grad_x = convolve2d(image, sobel_x, mode='same', boundary='symm')
    grad_y = convolve2d(image, sobel_y, mode='same', boundary='symm')

    return np.sqrt(grad_x**2 + grad_y**2)


    image = imageio.imread(path, mode='L')
    return image / 255.0


if __name__ == "__main__":
    
    image_path = r"D:\semester 5\ling.jpg"

    
    image = load_image(image_path)

   
    edges_roberts = roberts_operator(image)
    edges_sobel = sobel_operator(image)

    
    plt.figure(figsize=(12, 6))

    plt.subplot(1, 3, 1)
    plt.title("Original Image")
    plt.imshow(image, cmap="gray")
    plt.axis("off")

    plt.subplot(1, 3, 2)
    plt.title("Roberts Edge Detection")
    plt.imshow(edges_roberts, cmap="gray")
    plt.axis("off")

    plt.subplot(1, 3, 3)
    plt.title("Sobel Edge Detection")
    plt.imshow(edges_sobel, cmap="gray")
    plt.axis("off")

    plt.tight_layout()
    plt.show()

   
    print("Analisis:")
    print("- Operator Roberts lebih sensitif terhadap perubahan intensitas kecil, namun cenderung menghasilkan garis tepi yang lebih tipis dan kurang halus.")
    print("- Operator Sobel lebih baik dalam menangkap perubahan intensitas yang lebih besar dan menghasilkan tepi yang lebih halus dan lebih jelas.")
